AS65 Assembler for R6502 [1.42].                                     Page    1
-------------------------------- Scroll1.asm ---------------------------------

75 lines read, no errors in pass 1.
                        ;  This is a program to scroll a Smiley Face across al
                        ;  Looks pretty pathetic, so try and make a better one
                        ;  Note that the ";" is used to denote a comment
                        ;  "equ" is used to put a value into a label - similar
                        
                        		
                        
1740 =                  PortA		equ	$1740		; Address of Port A Data Register
1741 =                  PortADDR	equ	$1741		; Address of Port A Data Direction
1742 =                  PortB		equ	$1742		; Address of Port B Data Register
1743 =                  PortBDDR	equ	$1743		; Address of Port B Data Direction
                        
001d =                  SmilyFace	equ	$1d		; Indicates which segments to turn 
                        
0200 =                  		org	$0200
                        						; A is used to set the Digit Select Data the fir
                        						; X = 0 and is used turn off all segments beteen
                        						; Y is the Segment Data
                        		code
0200 : d8               		cld			;Clear Decimal Mode JUST IN CASE
0201 : a2ff             		ldx	#$ff
0203 : 8e4117           		stx	PortADDR	; Set Port A to output
0206 : 8e4317           		stx	PortBDDR	; Set PrtB to output
0209 : a200             		ldx	#$00		; X = 0
020b : a906             FirstDigit:	lda	#$06		; Set A to the first digit (-2 b
020d : 8d4217           		sta	PortB
0210 : a01d             		ldy	#SmilyFace	; Load Y with Smily Face data
0212 : 203902           		jsr	DisplayADigit	; Display Y Data in Digit 1 (left 
0215 : 204602           		jsr	Delay		; Leave it there for a bit, wasting time 
0218 : 203902           		jsr	DisplayADigit	; Display Y Data in Digit 2
021b : 204602           		jsr	Delay		; Leave it there for a bit, wasting time 
021e : 203902           		jsr	DisplayADigit	; Display Y Data in Digit 3
0221 : 204602           		jsr	Delay		; Leave it there for a bit, wasting time 
0224 : 203902           		jsr	DisplayADigit	; Display Y Data in Digit 4
0227 : 204602           		jsr	Delay		; Leave it there for a bit, wasting time 
022a : 203902           		jsr	DisplayADigit	; Display Y Data in Digit 5
022d : 204602           		jsr	Delay		; Leave it there for a bit, wasting time 
0230 : 203902           		jsr	DisplayADigit	; Display Y Data in Digit 6
0233 : 204602           		jsr	Delay		; Leave it there for a bit, wasting time 
0236 : 4c0b02           		jmp	FirstDigit	; Go back to Digit 1
                        
                        
                        ;
                        ;-----------------------------------------------------
                        ;----------------  This Subroutine Displays the Data i
                        ;-----------------------------------------------------
                        ;
0239 : 8e4017           DisplayADigit:	stx	PortA		; Segments Off
023c : ee4217           		inc	PortB		; Next Digit
023f : ee4217           		inc	PortB		; Next Digit
0242 : 8c4017           		sty	PortA		; New Data
0245 : 60               		rts			; Now return from the subroutine
                        
                        
                        ;
                        ;-----------------------------------------------------
                        ;----------------  This Subroutine Delays about 1/4 se
                        ; It clobbers the X and Y registers, so it saves them 
                        ;-----------------------------------------------------
                        ;
0246 : 8a               Delay:		txa			;Save X on the Stack
AS65 Assembler for R6502 [1.42].                                     Page    2
-------------------------------- Scroll1.asm ---------------------------------

0247 : 48               		pha
0248 : 98               		tya			;Save Y on the stack
0249 : 48               		pha
024a : a0ff             		ldy	#$ff		;Put the start value in Y
024c : a2ff             Delay1:		ldx	#$ff		;Put the start value in X
024e : ca               Delay2:		dex
024f : d0fd             		bne	Delay2		;Loop back until X = 0
0251 : 88               		dey				;Once x = 0, then dec Y
0252 : d0f8             		bne	Delay1			;And loop back until Y = 0
0254 : 68               		pla			;Restore Y from the stack
0255 : a8               		tay
0256 : 68               		pla			;Restore X from the stack
0257 : aa               		tax
0258 : 60               		rts			;Now return from the subroutine
                        
No errors in pass 2.
